name: Deploy to Kubernetes

on:
  repository_dispatch:
    types: [deploy]

env:
  AWS_REGION: us-east-1
  CLUSTER_NAME: production-shlomis-cluster # Update this

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Updated to v4
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4  # Updated to v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }}
          
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.11.1'
          
      - name: Install Nginx Ingress Controller
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx \
            --namespace ingress-nginx \
            --create-namespace \
            --set controller.service.type=LoadBalancer \
            --wait
            
      - name: Get Load Balancer Address
        run: |
          echo "Waiting for Load Balancer to be ready..."
          while [ -z "$(kubectl get svc ingress-nginx-controller -n ingress-nginx -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')" ]; do
            sleep 10
          done
          LB_HOSTNAME=$(kubectl get svc ingress-nginx-controller -n ingress-nginx -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "Load Balancer Hostname: $LB_HOSTNAME"
          echo "LOAD_BALANCER_HOSTNAME=$LB_HOSTNAME" >> $GITHUB_ENV
          
      - name: Deploy Application
        run: |
          helm upgrade --install weather-app ./helm-chart \
            --namespace ${{ github.event.client_payload.namespace }} \
            --create-namespace \
            --set image.tag=${{ github.event.client_payload.build_number }} \
            --set image.repository=rebachi/eks \
            --set service.type=ClusterIP \
            --set service.port=80 \
            --set service.targetPort=5000 \
            --set ingress.className=nginx \
            --set ingress.hosts[0].host=${{ env.LOAD_BALANCER_HOSTNAME }} \
            --wait
